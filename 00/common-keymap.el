(keymap-global-unset "C-x C-z")

(keymap-global-set "RET" 'newline-and-indent)
(keymap-global-set "M-c" 'toggle-case-fold-search)
(keymap-global-set "C-q" 'delete-frame)
(keymap-global-set "C-k" 'delete-line)
(keymap-global-set "C-z" 'undo-tree-undo)
(keymap-global-set "C-d" 'comment-lines)
(keymap-global-set "C-a" 'mark-whole-buffer)
(keymap-global-set "<home>" 'smart-beginning-of-line)
(keymap-global-set "C-x k" 'kill-current-buffer)
(keymap-global-set "C-x x" 'kmacro-call-macro)
(keymap-global-set "C-c r" 'replace-string)
(keymap-global-set "C-c C-r" 'replace-regexp)
(keymap-global-set "C-c C-x k" 'save-buffers-kill-emacs)
(keymap-global-set "C-c C-\\" 'goto-last-change)
(keymap-global-set "C-x DEL" 'join-line)
(keymap-global-set "M-X" 'command-all-buffers-same-major-mode)
(keymap-global-set "C-x 4 /" 'winner-undo)
(keymap-global-set "C-x 4 ?" 'winner-redo)
(keymap-global-set "C-x M-l" 'insert-line-number)
(keymap-global-set "C-x I" 'imv-open)
(keymap-global-set "C-x F" 'findgrep)
(keymap-global-set "C-c C" 'to-camel-case-at-point)
(keymap-global-set "C-x B" 'decode-base64)

(let ((m (make-sparse-keymap)))
  (keymap-set m "<left>" 'copy-to-buffer-left)
  (keymap-set m "<right>" 'copy-to-buffer-right)
  (keymap-set m "<up>" 'copy-to-buffer-up)
  (keymap-set m "<down>" 'copy-to-buffer-down)
  (keymap-global-set "C-c 1" m))

(let ((m (make-sparse-keymap)))
  (keymap-set m "<left>" 'cut-to-buffer-left)
  (keymap-set m "<right>" 'cut-to-buffer-right)
  (keymap-set m "<up>" 'cut-to-buffer-up)
  (keymap-set m "<down>" 'cut-to-buffer-down)
  (keymap-global-set "C-c 2" m))

(let ((m (make-sparse-keymap)))
  (keymap-set m "<left>" 'swap-buffers-left)
  (keymap-set m "<right>" 'swap-buffers-right)
  (keymap-set m "<up>" 'swap-buffers-up)
  (keymap-set m "<down>" 'swap-buffers-down)
  (keymap-global-set "C-c 3" m))

(let ((m (make-sparse-keymap)))
  (keymap-set m "<left>" 'move-buffer-left)
  (keymap-set m "<right>" 'move-buffer-right)
  (keymap-set m "<up>" 'move-buffer-up)
  (keymap-set m "<down>" 'move-buffer-down)
  (keymap-global-set "C-c 4" m))

(let ((m (make-sparse-keymap)))
  (keymap-set m "<left>" 'find-file-other-window-left)
  (keymap-set m "<right>" 'find-file-other-window-right)
  (keymap-set m "<up>" 'find-file-other-window-up)
  (keymap-set m "<down>" 'find-file-other-window-down)
  (keymap-set m "b" 'find-file-from-buffer)
  (keymap-set m "c" 'find-file-in-kec)
  (keymap-global-set "C-x f" m))

(let ((m (make-sparse-keymap)))
  (keymap-set m "<up>" 'multi-term-up)
  (keymap-set m "<down>" 'multi-term-down)
  (keymap-set m "<left>" 'multi-term-left)
  (keymap-set m "<right>" 'multi-term-right)
  (keymap-global-set "C-c t" m))

(let ((m (make-sparse-keymap)))
  (keymap-set m "<up>" 'copy-cwd-up)
  (keymap-set m "<down>" 'copy-cwd-down)
  (keymap-set m "<left>" 'copy-cwd-left)
  (keymap-set m "<right>" 'copy-cwd-right)
  (keymap-set m "x" 'normalize-buffer-working-directory)
  (keymap-global-set "C-c d" m))

(let ((m (make-sparse-keymap)))
  (keymap-set m "<up>" 'ielm-up)
  (keymap-set m "<down>" 'ielm-down)
  (keymap-set m "<left>" 'ielm-left)
  (keymap-set m "<right>" 'ielm-right)
  (keymap-global-set "C-c z" m))

(let ((m (make-sparse-keymap)))
  (keymap-set m "d" 'insert-current-date)
  (keymap-global-set "C-c C-v" m))
